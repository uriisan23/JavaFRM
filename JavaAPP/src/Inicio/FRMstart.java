/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Inicio;

import java.awt.*;
import javax.swing.JButton;
import javax.swing.*;

    import java.io.BufferedReader;
    import java.io.BufferedWriter;
    import java.io.FileReader;
    import java.io.FileWriter;
    import java.sql.Connection;
    import java.sql.ResultSet;
    import java.sql.Statement;
    import javax.swing.JOptionPane;

/**
 *
 * @author Z743075
 */
public class FRMstart extends javax.swing.JFrame {

    /**
     * Creates new form FRMstart
     */
    public FRMstart() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        waitS = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(java.awt.Color.white);
        setLocationByPlatform(true);
        setMaximumSize(new java.awt.Dimension(250, 600));
        setMinimumSize(new java.awt.Dimension(250, 600));
        setPreferredSize(new java.awt.Dimension(250, 600));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                hand1(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inicio/logofpms.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        jButton3.setFont(new java.awt.Font("Calibri", 1, 11)); // NOI18N
        jButton3.setText("Correos");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("Telefonos");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Domicilios");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        waitS.setFont(new java.awt.Font("Franklin Gothic Heavy", 0, 14)); // NOI18N
        waitS.setText("Please Wait . .");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(42, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(waitS, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jButton3)
                .addGap(46, 46, 46)
                .addComponent(jButton2)
                .addGap(51, 51, 51)
                .addComponent(waitS, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
      
  
      
  

     
 
    

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    this.waitS.setVisible(true);
        
        String Query = null, Proceso = null;
                Connection cn_DDebito = null;
                Statement st_DDebito = null;
                ResultSet rs3 = null;
                boolean found = false;
                
 try { // Generar conexion 
                       cn_DDebito = Inicio.Conecta.getconn_OracleDebito();
                      
                       
                
                  
                 try {  // TRY 2
                      
                     st_DDebito = cn_DDebito.createStatement();   
                     
                     BufferedReader br = null;
                     BufferedWriter bw = null;
                     FileWriter fw = null;
                     
                     String CurrLine = null, Prueba = null;
                     String vCol[]= {""}, ruta[];
                     ResultSet resulquery;
                     String fileE = null,   fileS = null, r = null;
                           int Linea = 0, i = 0, Tjtas = 0, LT4FIN =0;
                           
//____________________________________________________________________________________________                           
                           
            Proceso = getClass().getResource("").getPath(); // ESTO LO DETECTA DE FORMA AUTOMATICA
                         
                            ruta= Proceso.split("/");
                     for (i= 1 ; i<= ruta.length; i++)       
                    { //System.out.print(ruta[i]);
                                   if(i==1) r = ruta[i];
                                   if(i>=2) r = r + "//" + ruta[i];
  //_________________________________________________________________________________________________
                                   
                  // ESTO LO ESTABLCE DE FOMRA ESTATICA
                            //       if(ruta[i].equals("Z743075")){   
                                                               
                                    fileE = "C:\\FPMS\\REP\\EntradaAPP.txt";
                                    fileS = "C:\\FPMS\\REP\\EASphone\\SalidaTEL.txt";
                                    
                                      break; 
                                           //}
                    }
  //________________________________________________________________________________________________

                         // VARIABLES  WRITER Y READER 

                          br = new BufferedReader(new FileReader(fileE));
                          fw = new FileWriter(fileS);
                          bw = new BufferedWriter(fw); 
                         
                        
                          //AQUI ESCRIBE TU LAYOUT
                            bw.write("CODCLIENTE|ENT|TELEFONO|ULT_MOD|TIPO|CODTIPO| \n");  
                     //       System.out.println("CODCLIENTE|ENT|TELEFONO|ULT_MOD|TIPO|CODTIPO| \n");                  
                           
                           
                           
 //______________________________________________________________________________________________                          
                           try { // TRY 3
                           
        while((CurrLine = br.readLine()) != null ){   // WHILE 1A               
                           
                vCol = CurrLine.split(",");
                
                
               rs3 = st_DDebito.executeQuery( "select num_per, cod_entidad_per, trim((cod_larga_distancia||num_telefono)) as TELEFONO,  \n " + 
                                 "timest_umo  as ULT_Mod_TEL, des_caract_telefonica, TIP_TELEFONO  from mp0_dt_au_telefonos where  \n" +
                                 " num_per = ('" + vCol[0].trim() + "') and cod_entidad_per = '0014' and  \n " + 
                                 " Length ((cod_larga_distancia||num_telefono)) >= 10" /*  and des_caract_telefonica = 'TE'" */
               );
            resulquery = rs3;
                while (rs3.next()) {  //  WHILE 1B
                
                      found = true;
                      
                     
                      if (rs3.getString(1)== null || rs3.getString(1).isEmpty()){  // IF 1A
                          bw.write("||||||");   
                   //          System.out.print("||||||");  
                      } //cierre  IF 1A
                      else {  //ESLE 1A
                      
                             for (i=1 ; i<= rs3.getMetaData().getColumnCount(); i++) {  // FOR 1A
                             
                                if(rs3.getString(i) == null || rs3.getString(i).isEmpty())
                                      { bw.write("|"); /*System.out.print("|"); */ }
                 
                                else { 
                                            bw.write( rs3.getString(i).trim() + "|");
                        
                          
                          //               System.out.print(rs3.getString(i).trim() + "|");  
                                }
                             
                             } //cierre FOR 1A
                          
                     
                          
                           bw.write("\n");
                        //       System.out.print("\n");
                         
                          
                          
                      }
                
                
                
                
                
                
                } //cierre de  WHILE 1B  
             
            //break;
        } //cierre de  WHILE 1A    
                 
        
             if(!found) /*System.out.println("No." + Linea + "|" + "| No existe")*/;
// } //cierre else validacion si rs1 is null 
                            Linea++; 
        
                       
                            
                           }catch (Exception e){ //catch del 3ER try 
                           
                             //  System.out.print("Error EN PROCESO DE :"+ e);
                JOptionPane.showMessageDialog(null,"Error EN PROCESO DE :"+ e);
                   
                           
                           }  // FIN catch del 3ER try 
                     
                    
                          bw.close(); 
                      
                       cn_DDebito.close();
                      JOptionPane.showMessageDialog(null, "Termino la consulta.");     
                       this.waitS.setVisible(false);
                    //  System.exit(0);  
                     
    
                 
                 
                 }catch(Exception e){ //catch del 2do try 
                   //   System.out.print("Error al crear Statement detalle :"+ e);
                JOptionPane.showMessageDialog(null,"Error al crear Statement detalle :"+ e);
                     
                 
                     } // FIN catch del 2do try
                
                 
                 
                 
     } catch(Exception e){  //catch del 1er try 
               // System.out.print("Error al crear la conexion, detalle :"+ e);
                JOptionPane.showMessageDialog(null,"Error al crear la conexion, detalle :"+ e);
               
     }  // FIN catch del 3er try
                
                
                
                
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         // query para correos ***************************
        
        this.waitS.setVisible(true);
        String Query = null, Proceso = null;
                Connection cn_DDebito = null,cn_DCredito=null;
                
                Statement st_DDebito = null, stCRED = null;
                ResultSet rs3 = null;
                boolean found = false;
                
 try { // Generar conexion 
                       cn_DDebito = Inicio.Conecta.getconn_OracleDebito();
                       cn_DCredito = Inicio.Conecta.getconn_OracleCredito();
                       
                
                  
                 try {  // TRY 2
                     
                     st_DDebito = cn_DDebito.createStatement();   
                     stCRED =  cn_DCredito.createStatement();
                     BufferedReader br = null;
                     BufferedWriter bw = null;
                     FileWriter fw = null;
                     
                     String CurrLine = null, Prueba = null;
                     String vCol[]= {""}, ruta[];
                     
                     String fileE = null,   fileS = null, r = null;
                           int Linea = 0, i = 0, Tjtas = 0, LT4FIN =0;
                           
//____________________________________________________________________________________________                           
                           
            Proceso = getClass().getResource("").getPath(); // ESTO LO DETECTA DE FORMA AUTOMATICA
                         
                            ruta= Proceso.split("/");
                     for (i= 1 ; i<= ruta.length; i++)       
                    { //System.out.print(ruta[i]);
                                   if(i==1) r = ruta[i];
                                   if(i>=2) r = r + "//" + ruta[i];
  //_________________________________________________________________________________________________
                                   
                  // ESTO LO ESTABLCE DE FOMRA ESTATICA
                                  // if(ruta[i].equals("Z743075")){   
                                    fileE = "C:\\FPMS\\REP\\EntradaAPP.txt";
                                    fileS = "C:\\FPMS\\REP\\EASmail\\SalidaMAIL.txt";
                                      break; //}
                    }
  //________________________________________________________________________________________________

                         // VARIABLES  WRITER Y READER 

                          br = new BufferedReader(new FileReader(fileE));
                          fw = new FileWriter(fileS);
                          bw = new BufferedWriter(fw); 
                         
                          
                          //AQUI ESCRIBE TU LAYOUT
                            bw.write("\n");  
                         //   System.out.println("\n");                  
                           
                           
                           
 //______________________________________________________________________________________________                          
                           try { // TRY 3
                           
        while((CurrLine = br.readLine()) != null ){   // WHILE 1A               
                           
                vCol = CurrLine.split(",");
                
                
         /*      rs3 = st_DDebito.executeQuery( "select num_per, cod_entidad_per, trim((cod_larga_distancia||num_telefono)) as TELEFONO,  \n " + 
                                 "timest_umo  as ULT_Mod_TEL, des_caract_telefonica  from mp0_dt_au_telefonos where  \n" +
                                 " num_per = ('" + vCol[0].trim() + "') and cod_entidad_per = '0014' and  \n " + 
                                 " Length ((cod_larga_distancia||num_telefono)) >= 10  and des_caract_telefonica = 'TE'" );  */
                
                 
                  rs3 = st_DDebito.executeQuery( "select num_per, cod_entidad_per,tip_domicilio, NOM_CALLE, des_comuna, cod_postal, des_ciudad, cod_provincia, (nom_calle||'@'||des_ciudad) as Correo, timest_umo as ULT_Mod_MAIL from MP0_DT_AU_DOMICILIOS where \n" +
"tip_domicilio = 'ELE' and  num_per = ('" + vCol[0].trim() + "')" );
                
                
        /*        rs3 = stCRED.executeQuery("select \n" +
                                      
                                        " from Matc a where a.num_tarjeta_matc=('" + vCol[0].trim() + "')");  */
                                       
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                while (rs3.next()) {  //  WHILE 1B
                
                      found = true;
                      
                      
                      if (rs3.getString(1)== null || rs3.getString(1).isEmpty()){  // IF 1A
                          bw.write("||||||");   
                     //        System.out.print("||||||");       
                      } //cierre  IF 1A
                      else {  //ESLE 1A
                      
                             for (i=1 ; i<= rs3.getMetaData().getColumnCount(); i++) {  // FOR 1A
                             
                                if(rs3.getString(i) == null || rs3.getString(i).isEmpty())
                                      { bw.write("|");/* System.out.print("|") ; */ }
                 
                                else { 
                                            bw.write( rs3.getString(i).trim() + "|");
                        
                          
                                      //   System.out.print(rs3.getString(i).trim() + "|"); 
                                }
                             
                             } //cierre FOR 1A
                          
                          
                          
                           bw.write("\n");
                             //  System.out.print("\n");
                          
                      }
                
                
                
                
                
                
                } //cierre de  WHILE 1B  
             
            //break;
        } //cierre de  WHILE 1A    
                 
        
             if(!found)/* System.out.println("No." + Linea + "|" + "| No existe")*/;
// } //cierre else validacion si rs1 is null 
                            Linea++; 
        
                            
                            
                           }catch (Exception e){ //catch del 3ER try 
                           
                            //   System.out.print("Error EN PROCESO DE :"+ e);
                JOptionPane.showMessageDialog(null,"Error EN PROCESO DE :"+ e);
                   
                           
                           }  // FIN catch del 3ER try 
                     
                    
                      bw.close();
                      
                       cn_DDebito.close();
                       stCRED.close();
                     
                        JOptionPane.showMessageDialog(null, "Termino la consulta.");     
                       this.waitS.setVisible(false);
                 
                 
                 }catch(Exception e){ //catch del 2do try 
                     // System.out.print("Error al crear Statement detalle :"+ e);
                JOptionPane.showMessageDialog(null,"Error al crear Statement detalle :"+ e);
                     
                 
                     } // FIN catch del 2do try
                
                
     } catch(Exception e){  //catch del 1er try 
            //    System.out.print("Error al crear la conexion, detalle :"+ e);
                JOptionPane.showMessageDialog(null,"Error al crear la conexion, detalle :"+ e);
               
     }  // FIN catch del 3er try
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
           // QUERY para domicilios *********************************
        
    this.waitS.setVisible(true);
        
        
        String Query = null, Proceso = null;
                Connection cn_DDebito = null,cn_DCredito=null;
                
                Statement st_DDebito = null, stCRED = null;
                ResultSet rs3 = null;
                boolean found = false;
                
 try { // Generar conexion 
                       cn_DDebito = Inicio.Conecta.getconn_OracleDebito();
                       cn_DCredito = Inicio.Conecta.getconn_OracleCredito();
                       
                
                  
                 try {  // TRY 2
                     
                     st_DDebito = cn_DDebito.createStatement();   
                     stCRED =  cn_DCredito.createStatement();
                     BufferedReader br = null;
                     BufferedWriter bw = null;
                     FileWriter fw = null;
                     
                     String CurrLine = null, Prueba = null;
                     String vCol[]= {""}, ruta[];
                     
                     String fileE = null,   fileS = null, r = null;
                           int Linea = 0, i = 0, Tjtas = 0, LT4FIN =0;
                           
//____________________________________________________________________________________________                           
                           
            Proceso = getClass().getResource("").getPath(); // ESTO LO DETECTA DE FORMA AUTOMATICA
                         
                            ruta= Proceso.split("/");
                     for (i= 1 ; i<= ruta.length; i++)       
                    { //System.out.print(ruta[i]);
                                   if(i==1) r = ruta[i];
                                   if(i>=2) r = r + "//" + ruta[i];
  //_________________________________________________________________________________________________
                                   
                  // ESTO LO ESTABLCE DE FOMRA ESTATICA
                                  // if(ruta[i].equals("Z743075")){   
                                    fileE = "C:\\FPMS\\REP\\EntradaAPP.txt";
                                    fileS = "C:\\FPMS\\REP\\EASdom\\SalidaDOM.txt";
                                      break; //}
                    }
  //________________________________________________________________________________________________

                         // VARIABLES  WRITER Y READER 

                          br = new BufferedReader(new FileReader(fileE));
                          fw = new FileWriter(fileS);
                          bw = new BufferedWriter(fw); 
                         
                          
                          //AQUI ESCRIBE TU LAYOUT
                            bw.write("\n");  
                          //  System.out.println("\n");                  
                           
                           
                           
 //______________________________________________________________________________________________                          
                           try { // TRY 3
                           
        while((CurrLine = br.readLine()) != null ){   // WHILE 1A               
                           
                vCol = CurrLine.split(",");
                
                
         /*      rs3 = st_DDebito.executeQuery( "select num_per, cod_entidad_per, trim((cod_larga_distancia||num_telefono)) as TELEFONO,  \n " + 
                                 "timest_umo  as ULT_Mod_TEL, des_caract_telefonica  from mp0_dt_au_telefonos where  \n" +
                                 " num_per = ('" + vCol[0].trim() + "') and cod_entidad_per = '0014' and  \n " + 
                                 " Length ((cod_larga_distancia||num_telefono)) >= 10  and des_caract_telefonica = 'TE'" );  */
                
                 
                  rs3 = st_DDebito.executeQuery( "select num_per, cod_entidad_per,tip_domicilio, NOM_CALLE, des_comuna, cod_postal, des_ciudad, cod_provincia, (nom_calle||'@'||des_ciudad) as Correo, timest_umo as ULT_Mod_MAIL from MP0_DT_AU_DOMICILIOS where \n" +
"tip_domicilio <> 'ELE' and  num_per = ('" + vCol[0].trim() + "')" );
                
                
        /*        rs3 = stCRED.executeQuery("select \n" +
                                      
                                        " from Matc a where a.num_tarjeta_matc=('" + vCol[0].trim() + "')");  */
                                       
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                while (rs3.next()) {  //  WHILE 1B
                
                      found = true;
                      
                      
                      if (rs3.getString(1)== null || rs3.getString(1).isEmpty()){  // IF 1A
                          bw.write("||||||");   
                        //     System.out.print("||||||");              
                      } //cierre  IF 1A
                      else {  //ESLE 1A
                      
                             for (i=1 ; i<= rs3.getMetaData().getColumnCount(); i++) {  // FOR 1A
                             
                                if(rs3.getString(i) == null || rs3.getString(i).isEmpty())
                                      { bw.write("|");/* System.out.print("|");*/  }
                 
                                else { 
                                            bw.write( rs3.getString(i).trim() + "|");
                        
                          
                                     //    System.out.print(rs3.getString(i).trim() + "|"); 
                                }
                             
                             } //cierre FOR 1A
                          
                          
                          
                           bw.write("\n");
                            //   System.out.print("\n");
                          
                          
                      }
                
                
                
                
                
                
                } //cierre de  WHILE 1B  
             
            //break;
        } //cierre de  WHILE 1A    
                 
        
             if(!found)/* System.out.println("No." + Linea + "|" + "| No existe")*/;
// } //cierre else validacion si rs1 is null 
                            Linea++; 
        
                            
                            
                           }catch (Exception e){ //catch del 3ER try 
                           
                          //     System.out.print("Error EN PROCESO DE :"+ e);
                JOptionPane.showMessageDialog(null,"Error EN PROCESO DE :"+ e);
                   
                           
                           }  // FIN catch del 3ER try 
                     
                    
                      bw.close();
                      
                       cn_DDebito.close();
                       stCRED.close();
                     
                  JOptionPane.showMessageDialog(null, "Termino la consulta.");     
                       this.waitS.setVisible(false);
                 
                 }catch(Exception e){ //catch del 2do try 
                     // System.out.print("Error al crear Statement detalle :"+ e);
                JOptionPane.showMessageDialog(null,"Error al crear Statement detalle :"+ e);
                     
                 
                     } // FIN catch del 2do try
                
                
     } catch(Exception e){  //catch del 1er try 
             //   System.out.print("Error al crear la conexion, detalle :"+ e);
                JOptionPane.showMessageDialog(null,"Error al crear la conexion, detalle :"+ e);
               
     }  // FIN catch del 3er try
    }//GEN-LAST:event_jButton2ActionPerformed

    private void hand1(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_hand1
         
       
                          this.waitS.setVisible(false);
                          
    }//GEN-LAST:event_hand1

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FRMstart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FRMstart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FRMstart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FRMstart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            
                new FRMstart().setVisible(true);
                
              
               
               
            }
            
            
       
            
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel waitS;
    // End of variables declaration//GEN-END:variables
    


    


}
